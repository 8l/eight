## (set! 2 (' 2))
## (set! 3 (' 3))
## (set! 4 (' 4))
## (set! 5 (' 5))
## (set! 25 (' 25))
## (set! 6 (' 6))
(print (is (car (cons 2 3)) 2))
(print (is (car ((fn (b) (cons 2 b)) 3)) 2))
(print (is (cdr ((fn (b) (cons 2 b)) 3)) 3))
(print (is (cdr (((fn (b) (fn (a) (cons a b))) 3) 2)) 3))
(print (is (set! a 5) 5))
(print (is ((fn ((' b)) b) a) (' a)))
(print (is ((fn ((' b)) b) (, a)) 5))
(print (is (is ((fn (a) a) 25) 5) ()))
(print (is ((leak (' a) (fn (a) a)) 25) 25))
(print (is (oif (' a) 3 2) 3))
(print (is (oif () 3 2) 2))
(print (is (car ((fn (... b) b) 3 2 3)) 3))
(print (is (car ((fn (... (' b)) b) c a 2 q)) (' c)))
(print (is (car (car ((fn (... (' b)) b) (, (cons (' c) (cons (' a) ())))))) (' c)))
(print (is (call/cc (fn (f) (f 5) 4)) 5))
(print (is (handle-signals (fn (q) ((car q) 6)) (signal 5)) 6))
(print (is (handle-signals (fn (q) (car (cdr q))) (signal 5)) 5))
(print (is (handle-signals (fn (q) 4) (signal 5)) 4))
(print (is (handle-signals 
	    (fn (p) (car (cdr p)))
	    (handle-signals (fn (q) (unhandle-signal q)) (signal 5)))
 	   5))



