(set! unlambda 
      '((list)
        (oif list
             (oif (atom-p (car list))
                  (oif (is (car list) '...)
                       (unlambda (cdr list))
                       (cons (car list) (unlambda (cdr list))))
                  (cons (car (cdr (car list)))
                        (unlambda (cdr list))))
             ())))

(set! leak-all '((list expression)
     (oif list 
          (leak-all (cdr list) 
                    (leak (car list) expression)) 
          expression)))

(set! fn '(('lambda-list ... 'code)
           (leak-all (unlambda lambda-list) 
                     (cons lambda-list code))))



# Aaand def. Where fn defines anonymous functions, def binds a
# function to a name. TODO this should include an optional help string.

(set! def (fn ('name 'lambda-list ... 'code)
              (set! ,name (fn ,lambda-list *code))))

(def no (x) 
     "Returns t if x is (). Returns () otherwise."
     (is x ()))

